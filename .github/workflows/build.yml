name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Calc vars
        id: vars
        run: |
          echo "DOCKER_TAG=master-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'liberica'
          cache: gradle
      - uses: gradle/actions/setup-gradle@v4
      - name: Build & Publish Docker Image
        run: |
          ./gradlew bootBuildImage --publishImage \
            -PregistryUsername=${{ github.actor }} \
            -PregistryPassword=${{ secrets.GITHUB_TOKEN }} \
            -PdockerImageTag=${{ steps.vars.outputs.DOCKER_TAG }}
      - name: Send Telegram Notification (for Success)
        if: success()
        uses: appleboy/telegram-action@v1.0.1
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            ✅ The build was successful!
            View the build details here: 
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Send Telegram Notification (for Failure)
        if: failure()
        uses: appleboy/telegram-action@v1.0.1
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            ❌ The build failed.
            Please check the logs for details.
            View the build details here:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  build-native:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: RazorNd/setup-graalvm@main
        with:
          distribution: 'liberica'
          java-version: '25'
          java-package: 'jdk+fx'
          cache: gradle
      - uses: gradle/actions/setup-gradle@v4
      - name: macOS CLT
        if: runner.os == 'macOS'
        run: |
          xcode-select -p >/dev/null || xcode-select --install
      - name: Windows MSVC env
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          # На GitHub Windows runner уже есть VS Build Tools; убедимся в dev env
          echo "VSINSTALLDIR=$env:VSINSTALLDIR"
      - name: Build native
        run: ./gradlew nativeCompile -p cli
      - name: Upload 'phototransit-cli' artifact
        uses: actions/upload-artifact@v4
        with:
          name: phototransit-cli-${{ runner.os }}
          path: cli/phototransit-cli/build/native/nativeCompile/*


  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'liberica'
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
